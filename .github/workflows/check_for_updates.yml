name: "Check for Dependency Updates"

on:
  schedule:
    - cron: "15 14 * * *"

permissions:
  packages: read
  issues: write

jobs:
  build:
    name: "Check for Dependency Updates"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        id: checkout
        uses: actions/checkout@v4
      
      - name: Get release versions
        id: query_versions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_OPENSSL_RELEASE=$(gh api /repos/openssl/openssl/tags --jq '.[].name' | egrep '^openssl-[0-9\.]+$' | sort -nr | head -n1 | sed 's/openssl-//')
          LATEST_CURL_RELEASE=$(curl -sS https://curl.se/info | grep 'Version:' | cut -d ' ' -f2)
          CURRENT_OPENSSL_RELEASE=$(cat CertificateKit/build/openssl.want|cut -d '=' -f2)
          CURRENT_CURL_RELEASE=$(cat CertificateKit/build/curl.want|cut -d '=' -f2)
          echo "LATEST_OPENSSL_RELEASE=${LATEST_OPENSSL_RELEASE}" >> $GITHUB_OUTPUT
          echo "LATEST_CURL_RELEASE=${LATEST_CURL_RELEASE}" >> $GITHUB_OUTPUT
          echo "CURRENT_OPENSSL_RELEASE=${CURRENT_OPENSSL_RELEASE}" >> $GITHUB_OUTPUT
          echo "CURRENT_CURL_RELEASE=${CURRENT_CURL_RELEASE}" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Update OpenSSL
        id: openssl
        if: ${{ steps.query_versions.outputs.LATEST_OPENSSL_RELEASE != steps.query_versions.outputs.CURRENT_OPENSSL_RELEASE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="Update OpenSSL to ${{ steps.query_versions.outputs.LATEST_OPENSSL_RELEASE }}"
          EXISTING_ISSUES=$(gh issue list --search "'$ISSUE_TITLE'" | wc -l)
          if [[ "$EXISTING_ISSUES" == "" ]]; then
            gh issue create --title "$ISSUE_TITLE" --assignee ecnepsnai --label CertificateKit --body "OpenSSL ${{ steps.query_versions.outputs.LATEST_OPENSSL_RELEASE }} is available, current version used is ${{ steps.query_versions.outputs.CURRENT_OPENSSL_RELEASE }}."
          else
            echo "::notice ::Skipping new issue creation, existing issue already found for OpenSSL"
          fi

      - name: Update curl
        id: curl
        if: ${{ steps.query_versions.outputs.LATEST_CURL_RELEASE != steps.query_versions.outputs.CURRENT_CURL_RELEASE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="Update curl to ${{ steps.query_versions.outputs.LATEST_CURL_RELEASE }}"
          EXISTING_ISSUES=$(gh issue list --search "'$ISSUE_TITLE'" | wc -l)
          if [[ "$EXISTING_ISSUES" == "" ]]; then
            gh issue create --title "$ISSUE_TITLE" --assignee ecnepsnai --label CertificateKit --body "curl ${{ steps.query_versions.outputs.LATEST_CURL_RELEASE }} is available, current version used is ${{ steps.query_versions.outputs.CURRENT_CURL_RELEASE }}."
          else
            echo "::notice ::Skipping new issue creation, existing issue already found for curl"
          fi
